# Conditionals

**
#1

- If want to compare a heavy amount of things, you can have an IF nested in each CASE rather than IF nested in IF four or five times
- We can use tuples, ranges, queries in both switch and ifs
*/

/**
#2
<<<<<<< HEAD
=======

c. The below code will not compile because switch statements need case statements for all expected values or a default statement.
*/

/**
#3

temperatureInFahrenheit = 72

if temperatureInFahrenheit <= 40 {
 print("It's cold out.")
} else if temperatureInFahrenheit >= 85 {
   print("It's really warm.")
} else {
   print("Weather is moderate.")
}

Convert to Switch

var temperatureInFahrenheit = 72
switch temperatureInFahrenheit {
case 0...40:
   print("It's cold out.")
case 85...120:
   print("It's really warm.")
default:
   print("Weather is moderate.")
}
*/

/**
#4

let cardNum = 12
if cardNum == 11 {
print("Jack")
} else if cardNum == 12 {
print("Queen")
} else if cardNum == 13 {
print("King")
} else {
print(cardNum)
}

Convert to Switch
switch cardNum {
case 11:
   print("Jack")
case 12:
   print("Queen")
case 13:
   print("King")
default:
   print(\(cardNum))
}
*/

/**
#5

100 -> A+
90 - 99 -> A
80 - 89 -> B
70 - 79 -> C
65 - 69 -> D
Below 65 -> F

var grade: Int
switch grade {
case 100:
   print("A+")
case 90...99:
   print("A")
case 80...89:
   print("B")
case 70...79:
   print("C")
case 65...69:
   print("D")
default:
   print("F")
}

*/

/**
#6

First print("The answer to life, the universe and everything")
365  print("Days in year")
1024 print("Bytes in a Kilobyte")
65: print("Some uninteresting number")
Removing default = error
*/

/**
#7

var population: Int = 10000
var message = String()

if population > 10000 {
message = "\(population) is a large town"
} else if population < 10000 && population > 5000 {
message = "\(population) is a medium size town"
} else {
message = "\(population) is a mid-size town"
}

Convert to Switch

switch population {
case 10000...1000000:
   message = "\(population) is a large town"
case 5000..<10000:
   message = "\(population) is a medium town"
default:
   message = "\(population) is a mid-size town"
}

*/

/**
#8

let myTuple: (Int, Int) = (5, 1000000)
let myTupleSum = myTuple.0 + myTuple.1

if myTupleSum >= 15 {
   print("\(myTupleSum) is greater than or equal to 15")
}

switch myTupleSum {
case 0..<15:
   break
default:
   if myTupleSum < 0 {
       break
   } else {
       print("\(myTupleSum) is greater than or equal to 15")
   }
}
*/

/**
#9

let studentNameAndClass = ("Ben", 3.2)
let myTupleTwo = studentNameAndClass
switch myTupleTwo{
case ("Ben", 3.2):
   print("Hello \(myTupleTwo.0) from class \(myTupleTwo.1)")
default:
   print("hi")
}
*/

/**
#10

var this = (1,3)
switch this {
case let (x,y) where x*2==y:
   print("x*2 is equal to y")
case let (x,y) where x*3==y:
   print("x*3 is equal to y")
case let (x,y):
   print("Nothing is special about this tuple")
}
*/

/**
#11



*/

/**
#

*/

/**
#

*/

/**
#

*/

/**
#

*/

/**
#

*/

 



# Conditionals






### Question 1.
What are some reasons to use a __switch__ instead of an __if__?

### Question 2.
What's missing from the switch statement below?
- a. The case statement needs to say month == 1
- b. The code is valid and not missing anything
- c. The below code will not compile because switch statements need case statements for all expected values or a default statement.

```swift
let monthNum = 3
switch monthNum {
case 1:
    print("January")
}
```
>>>>>>> 3b4f24426a05d78d29a9f66de656392dabfb3821

c. The below code will not compile because switch statements need case statements for all expected values or a default statement.
*/

/**
#3

temperatureInFahrenheit = 72

if temperatureInFahrenheit <= 40 {
 print("It's cold out.")
} else if temperatureInFahrenheit >= 85 {
   print("It's really warm.")
} else {
   print("Weather is moderate.")
}

Convert to Switch

var temperatureInFahrenheit = 72
switch temperatureInFahrenheit {
case 0...40:
   print("It's cold out.")
case 85...120:
   print("It's really warm.")
default:
   print("Weather is moderate.")
}
*/

/**
#4

let cardNum = 12
if cardNum == 11 {
print("Jack")
} else if cardNum == 12 {
print("Queen")
} else if cardNum == 13 {
print("King")
} else {
print(cardNum)
}

Convert to Switch
switch cardNum {
case 11:
   print("Jack")
case 12:
   print("Queen")
case 13:
   print("King")
default:
   print(\(cardNum))
}
*/

/**
#5

100 -> A+
90 - 99 -> A
80 - 89 -> B
70 - 79 -> C
65 - 69 -> D
Below 65 -> F

var grade: Int
switch grade {
case 100:
   print("A+")
case 90...99:
   print("A")
case 80...89:
   print("B")
case 70...79:
   print("C")
case 65...69:
   print("D")
default:
   print("F")
}

*/

/**
#6

First print("The answer to life, the universe and everything")
365  print("Days in year")
1024 print("Bytes in a Kilobyte")
65: print("Some uninteresting number")
Removing default = error
*/

/**
#7

var population: Int = 10000
var message = String()

if population > 10000 {
message = "\(population) is a large town"
} else if population < 10000 && population > 5000 {
message = "\(population) is a medium size town"
} else {
message = "\(population) is a mid-size town"
}

Convert to Switch

switch population {
case 10000...1000000:
   message = "\(population) is a large town"
case 5000..<10000:
   message = "\(population) is a medium town"
default:
   message = "\(population) is a mid-size town"
}

*/

/**
#8

let myTuple: (Int, Int) = (5, 1000000)
let myTupleSum = myTuple.0 + myTuple.1

if myTupleSum >= 15 {
   print("\(myTupleSum) is greater than or equal to 15")
}

switch myTupleSum {
case 0..<15:
   break
default:
   if myTupleSum < 0 {
       break
   } else {
       print("\(myTupleSum) is greater than or equal to 15")
   }
}
*/

/**
#9

let studentNameAndClass = ("Ben", 3.2)
let myTupleTwo = studentNameAndClass
switch myTupleTwo{
case ("Ben", 3.2):
   print("Hello \(myTupleTwo.0) from class \(myTupleTwo.1)")
default:
   print("hi")
}
*/

/**
#10

var this = (1,3)
switch this {
case let (x,y) where x*2==y:
   print("x*2 is equal to y")
case let (x,y) where x*3==y:
   print("x*3 is equal to y")
case let (x,y):
   print("Nothing is special about this tuple")
}
*/

/**
#11



*/

/**
#

*/

/**
#

*/

/**
#

*/

/**
#

*/

/**
#

*/

 
